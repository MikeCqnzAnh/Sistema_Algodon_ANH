<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAACMuAAAjLgAAAAAAAAAA
        AAAAAAAAAAAAAGtZTwBkVEoFc2BVQXllWZx7Z1rYfGda8XxnW/B5ZVnVdGFVlW5cUTpjU0kEZ1dMAAAA
        AAAAAAAAVklAAHdjWAByX1QWfGdbi4JsYOuFb2L/lYB0/6uZj/+Kc2b/h3Bj/4RuYf99aFznc2BVgGpZ
        ThFtW1AAUEU6AHhkWAB1YVYXgGperYZwY/6IcWT/h3Bj/5eDeP/azsf/nol9/4dwY/+IcWT/iHFk/4Fs
        X/11YVagallOEW1bUABqWU4GgWtfkIdwY/+IcWT/iHFk/4hxZP+HcGP/xLWq/7OglP+Gb2L/iHFk/4hx
        ZP+IcWT/gWxf/XNgVYBXSUACf2peSYZwY+2IcWT/h3Bj/4dwY/+HcGP/j3hr/6+bj/+plYj/iXJl/4dv
        Yv+HcGP/iHFk/4hxZP99aFzlblxROoRuYamIcWT/iXJl/5F7bv+Ygnb/tqOX/9jIu//Zybv/2Mi7/8q5
        rf+nk4f/lX9z/454bP+IcWT/hG5h/3RhVZWHcGPlh3Bj/5R9cP+2pJj/x7et/+LVzf/Vx73/vaue/8Sy
        pv/l2dD/2MvC/8KyqP+qlor/i3Vo/4dwY/95ZVnUh3Bj/Y53av/Luq3/38/C/8Sypf+6q6P/wbCk/+PU
        xv/dzcD/xrat/7Khl//Luaz/38/B/7Whlf+IcWT/fGhb8IdvYv+diHz/6NzR//Dk2f/czsT/xbar/+XZ
        zv/u4tj/7uLY/+DTyf/Ds6n/49bL//Hl2v/XyL3/jXZq/31oXPGHcGPwl4J1/+Xa0v/17OX/7uTd/+XZ
        0f/z6uP/8uni//Pp4v/x6OD/49fP//Pp4v/17eX/z8G4/4pzZv98Z1vYiHFkvYhxZP+vnpT/4NfQ/9rP
        yf+7rKP/9O7p//jy7f/58+7/6ODa/7qqof/k29T/1svE/52Jff+Fb2L/eWVZm4hxZGKIcWT2i3Ro/76v
        pv/Qw7v/xLat/9PJw//28/D/8u3q/8i7tP/Ju7L/z8K6/7emnf+IcWT/gmxg6XNgVUGIcWQPiHFkrohx
        ZP++sKf/+PTw//n18v/Mwbv/ppWL/6iXjv/a0cv//Pn1//Xv7P+yoZf/hW5h/3xnW4tYSkEEiHFkAIhx
        ZCqIcGPLjHZq/6+flv/As6z/pZOK/4hwY/+Kc2f/q5uS/8CzrP+pmI7/iXNm/n9qXq1xXlMWdWFWAIhx
        ZACIcWQAiHFkKohwY66Gb2L3hm9i/4dvYv+IcWT/iHFk/4ZvYv+Gb2L/hW5h7oBrXpB1YVYXe2ZbAFtM
        QwAAAAAAiHFkAIhxZACIcWQQiHFkYohxZL6IcWTxiHFk/4hxZP2HcGPmhW5hqX9qXkhwXlMHdmJXAAAA
        AAAAAAAA4AcAAMADAACAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAB
        AADAAwAA4AcAAA==
</value>
  </data>
</root>